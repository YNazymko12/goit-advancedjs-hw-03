import{a as i,S as p,i as d}from"./assets/vendor-145b7b72.js";(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))a(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const l of o.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&a(l)}).observe(document,{childList:!0,subtree:!0});function n(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerpolicy&&(o.referrerPolicy=e.referrerpolicy),e.crossorigin==="use-credentials"?o.credentials="include":e.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function a(e){if(e.ep)return;e.ep=!0;const o=n(e);fetch(e.href,o)}})();i.defaults.headers.common["x-api-key"]="live_seZlfq3ns3OG4awqKpgrHguF1bsT8zG0vEkOs8p5QCXaskGFToJj4a6Hy3j72iT7";async function f(){return await i.get("https://api.thecatapi.com/v1/breeds").then(t=>t.data)}async function y(t){return await i.get(`https://api.thecatapi.com/v1/images/search?breed_ids=${t}`).then(s=>s.data)}const r={loader:document.querySelector(".loader"),select:document.querySelector(".breed-select"),catInfoBox:document.querySelector(".cat-info")};let c=!0;r.select.style.display="none";r.select.addEventListener("change",h);const m=new p({select:"#single",settings:{placeholderText:"Search breeds"}}),u={title:"Error",message:"❌ Oops! Something went wrong! Try reloading the page!",position:"topCenter",color:"red"};f().then(t=>{if(!t)throw r.loader.style.display="none",new Error;const s=t.map(({id:n,name:a})=>({text:a,value:n}));m.setData([{placeholder:!0,text:""},...s]),r.loader.style.display="none",r.select.style.display="block"}).catch(t=>{console.log(t.message),r.loader.style.display="none",r.select.style.display="none",d.show(u)});function h(t){if(t.preventDefault(),r.loader.style.display="block",r.catInfoBox.innerHTML="",c){c=!1;return}const{value:s}=t.currentTarget;y(s).then(n=>{if(!n)throw r.loader.style.display="none",new Error;r.catInfoBox.insertAdjacentHTML("beforeend",g(n)),r.loader.style.display="none"}).catch(n=>{console.log(n.message),r.loader.style.display="none",d.show(u)})}function g(t){const{url:s}=t[0],{description:n,name:a,temperament:e}=t[0].breeds[0];return`<img src="${s}" alt="${a} cat" width="400" height="auto"/><div class="breed-text-info"><h1>${a}</h1><p class="description">${n}</p><p><strong>Temperament:</strong> ${e}</p></div>`}
//# sourceMappingURL=commonHelpers.js.map
